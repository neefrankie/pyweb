from django.contrib import admin
from django.db import models

# Create your models here.
import datetime

from django.db import models
from django.utils import timezone


# To include the app in project, add a reference to its
# configuration class in the INSTALLED_APPS setting.
# Then generate migration schema:
#   python manage.py makemigrations polls
#
# Dry run:
#   python manage.py sqlmigrate polls 0001
#
# Table names are automatically generated by combing the name of the app
# and lowercase name of the model. (TODO: override)
#
# Primary keys are added automatically (TODO: override)
# Run `python manage.py check` checks for problems in your project without
# making migrations or touching the database.
#
# To create those models tables in your database:
#   python manage.py migrate
#
# The migrate command takes all the migrations that haven't been applied
# and runs them against your database.
# Commit migrations to your version control system.
#
# To make the app modifiable in the admin, tell the admin that
# Question objects have an admin interface.
class Question(models.Model):
    question_text = models.CharField(max_length=200)
    pub_date = models.DateTimeField("date published")

    @admin.display(
        boolean=True,
        ordering="pub_date",
        description="Published recently"
    )
    def was_published_recently(self):
        now = timezone.now()
        return now - datetime.timedelta(days=1) <= self.pub_date <= now

    # Object's representation are used throughout Django's
    # automatically-generated admin.
    def __str__(self):
        return self.question_text


class Choice(models.Model):
    question = models.ForeignKey(Question, on_delete=models.CASCADE)
    choice_text = models.CharField(max_length=200)
    votes = models.IntegerField(default=0)

    def __str__(self):
        return self.choice_text
